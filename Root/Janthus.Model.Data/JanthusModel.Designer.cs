//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("JanthusModel", "FK_Bestiary_ActorType", "ActorType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Janthus.Model.Data.ActorType), "Bestiary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Janthus.Model.Data.Bestiary), true)]

#endregion

namespace Janthus.Model.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class JanthusModelEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new JanthusModelEntities object using the connection string found in the 'JanthusModelEntities' section of the application configuration file.
        /// </summary>
        public JanthusModelEntities() : base("name=JanthusModelEntities", "JanthusModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JanthusModelEntities object.
        /// </summary>
        public JanthusModelEntities(string connectionString) : base(connectionString, "JanthusModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JanthusModelEntities object.
        /// </summary>
        public JanthusModelEntities(EntityConnection connection) : base(connection, "JanthusModelEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Level> Levels
        {
            get
            {
                if ((_Levels == null))
                {
                    _Levels = base.CreateObjectSet<Level>("Levels");
                }
                return _Levels;
            }
        }
        private ObjectSet<Level> _Levels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SkillLevel> SkillLevels
        {
            get
            {
                if ((_SkillLevels == null))
                {
                    _SkillLevels = base.CreateObjectSet<SkillLevel>("SkillLevels");
                }
                return _SkillLevels;
            }
        }
        private ObjectSet<SkillLevel> _SkillLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SkillType> SkillTypes
        {
            get
            {
                if ((_SkillTypes == null))
                {
                    _SkillTypes = base.CreateObjectSet<SkillType>("SkillTypes");
                }
                return _SkillTypes;
            }
        }
        private ObjectSet<SkillType> _SkillTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Class> Classes
        {
            get
            {
                if ((_Classes == null))
                {
                    _Classes = base.CreateObjectSet<Class>("Classes");
                }
                return _Classes;
            }
        }
        private ObjectSet<Class> _Classes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActorType> ActorTypes
        {
            get
            {
                if ((_ActorTypes == null))
                {
                    _ActorTypes = base.CreateObjectSet<ActorType>("ActorTypes");
                }
                return _ActorTypes;
            }
        }
        private ObjectSet<ActorType> _ActorTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bestiary> Bestiaries
        {
            get
            {
                if ((_Bestiaries == null))
                {
                    _Bestiaries = base.CreateObjectSet<Bestiary>("Bestiaries");
                }
                return _Bestiaries;
            }
        }
        private ObjectSet<Bestiary> _Bestiaries;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Levels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLevels(Level level)
        {
            base.AddObject("Levels", level);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SkillLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSkillLevels(SkillLevel skillLevel)
        {
            base.AddObject("SkillLevels", skillLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SkillTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSkillTypes(SkillType skillType)
        {
            base.AddObject("SkillTypes", skillType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Classes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClasses(Class @class)
        {
            base.AddObject("Classes", @class);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActorTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActorTypes(ActorType actorType)
        {
            base.AddObject("ActorTypes", actorType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bestiaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBestiaries(Bestiary bestiary)
        {
            base.AddObject("Bestiaries", bestiary);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JanthusModel", Name="ActorType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActorType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActorType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ActorType CreateActorType(global::System.Int32 id, global::System.String name)
        {
            ActorType actorType = new ActorType();
            actorType.Id = id;
            actorType.Name = name;
            return actorType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JanthusModel", "FK_Bestiary_ActorType", "Bestiary")]
        public EntityCollection<Bestiary> Bestiaries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bestiary>("JanthusModel.FK_Bestiary_ActorType", "Bestiary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bestiary>("JanthusModel.FK_Bestiary_ActorType", "Bestiary", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JanthusModel", Name="Bestiary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bestiary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bestiary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="actorTypeId">Initial value of the ActorTypeId property.</param>
        /// <param name="internalId">Initial value of the InternalId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="currentHitPoints">Initial value of the CurrentHitPoints property.</param>
        /// <param name="sizeMultiplier">Initial value of the SizeMultiplier property.</param>
        public static Bestiary CreateBestiary(global::System.Int32 id, global::System.Int32 actorTypeId, global::System.String internalId, global::System.String name, global::System.String description, global::System.Decimal currentHitPoints, global::System.Decimal sizeMultiplier)
        {
            Bestiary bestiary = new Bestiary();
            bestiary.Id = id;
            bestiary.ActorTypeId = actorTypeId;
            bestiary.InternalId = internalId;
            bestiary.Name = name;
            bestiary.Description = description;
            bestiary.CurrentHitPoints = currentHitPoints;
            bestiary.SizeMultiplier = sizeMultiplier;
            return bestiary;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActorTypeId
        {
            get
            {
                return _ActorTypeId;
            }
            set
            {
                OnActorTypeIdChanging(value);
                ReportPropertyChanging("ActorTypeId");
                _ActorTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActorTypeId");
                OnActorTypeIdChanged();
            }
        }
        private global::System.Int32 _ActorTypeId;
        partial void OnActorTypeIdChanging(global::System.Int32 value);
        partial void OnActorTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InternalId
        {
            get
            {
                return _InternalId;
            }
            set
            {
                OnInternalIdChanging(value);
                ReportPropertyChanging("InternalId");
                _InternalId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InternalId");
                OnInternalIdChanged();
            }
        }
        private global::System.String _InternalId;
        partial void OnInternalIdChanging(global::System.String value);
        partial void OnInternalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CurrentHitPoints
        {
            get
            {
                return _CurrentHitPoints;
            }
            set
            {
                OnCurrentHitPointsChanging(value);
                ReportPropertyChanging("CurrentHitPoints");
                _CurrentHitPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentHitPoints");
                OnCurrentHitPointsChanged();
            }
        }
        private global::System.Decimal _CurrentHitPoints;
        partial void OnCurrentHitPointsChanging(global::System.Decimal value);
        partial void OnCurrentHitPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SizeMultiplier
        {
            get
            {
                return _SizeMultiplier;
            }
            set
            {
                OnSizeMultiplierChanging(value);
                ReportPropertyChanging("SizeMultiplier");
                _SizeMultiplier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SizeMultiplier");
                OnSizeMultiplierChanged();
            }
        }
        private global::System.Decimal _SizeMultiplier;
        partial void OnSizeMultiplierChanging(global::System.Decimal value);
        partial void OnSizeMultiplierChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JanthusModel", "FK_Bestiary_ActorType", "ActorType")]
        public ActorType ActorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActorType>("JanthusModel.FK_Bestiary_ActorType", "ActorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActorType>("JanthusModel.FK_Bestiary_ActorType", "ActorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActorType> ActorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActorType>("JanthusModel.FK_Bestiary_ActorType", "ActorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActorType>("JanthusModel.FK_Bestiary_ActorType", "ActorType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JanthusModel", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Class object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="constitutionRollWeight">Initial value of the ConstitutionRollWeight property.</param>
        /// <param name="dexterityRollWeight">Initial value of the DexterityRollWeight property.</param>
        /// <param name="intelligenceRollWeight">Initial value of the IntelligenceRollWeight property.</param>
        /// <param name="luckRollWeight">Initial value of the LuckRollWeight property.</param>
        /// <param name="attunementRollWeight">Initial value of the AttunementRollWeight property.</param>
        /// <param name="strengthRollWeight">Initial value of the StrengthRollWeight property.</param>
        /// <param name="willpowerRollWeight">Initial value of the WillpowerRollWeight property.</param>
        public static Class CreateClass(global::System.Int32 id, global::System.String name, global::System.Double constitutionRollWeight, global::System.Double dexterityRollWeight, global::System.Double intelligenceRollWeight, global::System.Double luckRollWeight, global::System.Double attunementRollWeight, global::System.Double strengthRollWeight, global::System.Double willpowerRollWeight)
        {
            Class @class = new Class();
            @class.Id = id;
            @class.Name = name;
            @class.ConstitutionRollWeight = constitutionRollWeight;
            @class.DexterityRollWeight = dexterityRollWeight;
            @class.IntelligenceRollWeight = intelligenceRollWeight;
            @class.LuckRollWeight = luckRollWeight;
            @class.AttunementRollWeight = attunementRollWeight;
            @class.StrengthRollWeight = strengthRollWeight;
            @class.WillpowerRollWeight = willpowerRollWeight;
            return @class;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ConstitutionRollWeight
        {
            get
            {
                return _ConstitutionRollWeight;
            }
            set
            {
                OnConstitutionRollWeightChanging(value);
                ReportPropertyChanging("ConstitutionRollWeight");
                _ConstitutionRollWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConstitutionRollWeight");
                OnConstitutionRollWeightChanged();
            }
        }
        private global::System.Double _ConstitutionRollWeight;
        partial void OnConstitutionRollWeightChanging(global::System.Double value);
        partial void OnConstitutionRollWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DexterityRollWeight
        {
            get
            {
                return _DexterityRollWeight;
            }
            set
            {
                OnDexterityRollWeightChanging(value);
                ReportPropertyChanging("DexterityRollWeight");
                _DexterityRollWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DexterityRollWeight");
                OnDexterityRollWeightChanged();
            }
        }
        private global::System.Double _DexterityRollWeight;
        partial void OnDexterityRollWeightChanging(global::System.Double value);
        partial void OnDexterityRollWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double IntelligenceRollWeight
        {
            get
            {
                return _IntelligenceRollWeight;
            }
            set
            {
                OnIntelligenceRollWeightChanging(value);
                ReportPropertyChanging("IntelligenceRollWeight");
                _IntelligenceRollWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntelligenceRollWeight");
                OnIntelligenceRollWeightChanged();
            }
        }
        private global::System.Double _IntelligenceRollWeight;
        partial void OnIntelligenceRollWeightChanging(global::System.Double value);
        partial void OnIntelligenceRollWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double LuckRollWeight
        {
            get
            {
                return _LuckRollWeight;
            }
            set
            {
                OnLuckRollWeightChanging(value);
                ReportPropertyChanging("LuckRollWeight");
                _LuckRollWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LuckRollWeight");
                OnLuckRollWeightChanged();
            }
        }
        private global::System.Double _LuckRollWeight;
        partial void OnLuckRollWeightChanging(global::System.Double value);
        partial void OnLuckRollWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double AttunementRollWeight
        {
            get
            {
                return _AttunementRollWeight;
            }
            set
            {
                OnAttunementRollWeightChanging(value);
                ReportPropertyChanging("AttunementRollWeight");
                _AttunementRollWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttunementRollWeight");
                OnAttunementRollWeightChanged();
            }
        }
        private global::System.Double _AttunementRollWeight;
        partial void OnAttunementRollWeightChanging(global::System.Double value);
        partial void OnAttunementRollWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double StrengthRollWeight
        {
            get
            {
                return _StrengthRollWeight;
            }
            set
            {
                OnStrengthRollWeightChanging(value);
                ReportPropertyChanging("StrengthRollWeight");
                _StrengthRollWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StrengthRollWeight");
                OnStrengthRollWeightChanged();
            }
        }
        private global::System.Double _StrengthRollWeight;
        partial void OnStrengthRollWeightChanging(global::System.Double value);
        partial void OnStrengthRollWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double WillpowerRollWeight
        {
            get
            {
                return _WillpowerRollWeight;
            }
            set
            {
                OnWillpowerRollWeightChanging(value);
                ReportPropertyChanging("WillpowerRollWeight");
                _WillpowerRollWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WillpowerRollWeight");
                OnWillpowerRollWeightChanged();
            }
        }
        private global::System.Double _WillpowerRollWeight;
        partial void OnWillpowerRollWeightChanging(global::System.Double value);
        partial void OnWillpowerRollWeightChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JanthusModel", Name="Level")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Level : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Level object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="minimumSumOfAttributes">Initial value of the MinimumSumOfAttributes property.</param>
        /// <param name="levelRankGroupName">Initial value of the LevelRankGroupName property.</param>
        public static Level CreateLevel(global::System.Int32 id, global::System.Int16 number, global::System.Int16 minimumSumOfAttributes, global::System.String levelRankGroupName)
        {
            Level level = new Level();
            level.Id = id;
            level.Number = number;
            level.MinimumSumOfAttributes = minimumSumOfAttributes;
            level.LevelRankGroupName = levelRankGroupName;
            return level;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int16 _Number;
        partial void OnNumberChanging(global::System.Int16 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 MinimumSumOfAttributes
        {
            get
            {
                return _MinimumSumOfAttributes;
            }
            set
            {
                OnMinimumSumOfAttributesChanging(value);
                ReportPropertyChanging("MinimumSumOfAttributes");
                _MinimumSumOfAttributes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumSumOfAttributes");
                OnMinimumSumOfAttributesChanged();
            }
        }
        private global::System.Int16 _MinimumSumOfAttributes;
        partial void OnMinimumSumOfAttributesChanging(global::System.Int16 value);
        partial void OnMinimumSumOfAttributesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LevelRankGroupName
        {
            get
            {
                return _LevelRankGroupName;
            }
            set
            {
                OnLevelRankGroupNameChanging(value);
                ReportPropertyChanging("LevelRankGroupName");
                _LevelRankGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LevelRankGroupName");
                OnLevelRankGroupNameChanged();
            }
        }
        private global::System.String _LevelRankGroupName;
        partial void OnLevelRankGroupNameChanging(global::System.String value);
        partial void OnLevelRankGroupNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JanthusModel", Name="SkillLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SkillLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SkillLevel object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="conferredEffectivenessMinimum">Initial value of the ConferredEffectivenessMinimum property.</param>
        /// <param name="conferredEffectivenessMaximum">Initial value of the ConferredEffectivenessMaximum property.</param>
        public static SkillLevel CreateSkillLevel(global::System.Int32 id, global::System.String name, global::System.Decimal conferredEffectivenessMinimum, global::System.Decimal conferredEffectivenessMaximum)
        {
            SkillLevel skillLevel = new SkillLevel();
            skillLevel.Id = id;
            skillLevel.Name = name;
            skillLevel.ConferredEffectivenessMinimum = conferredEffectivenessMinimum;
            skillLevel.ConferredEffectivenessMaximum = conferredEffectivenessMaximum;
            return skillLevel;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ConferredEffectivenessMinimum
        {
            get
            {
                return _ConferredEffectivenessMinimum;
            }
            set
            {
                OnConferredEffectivenessMinimumChanging(value);
                ReportPropertyChanging("ConferredEffectivenessMinimum");
                _ConferredEffectivenessMinimum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConferredEffectivenessMinimum");
                OnConferredEffectivenessMinimumChanged();
            }
        }
        private global::System.Decimal _ConferredEffectivenessMinimum;
        partial void OnConferredEffectivenessMinimumChanging(global::System.Decimal value);
        partial void OnConferredEffectivenessMinimumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ConferredEffectivenessMaximum
        {
            get
            {
                return _ConferredEffectivenessMaximum;
            }
            set
            {
                OnConferredEffectivenessMaximumChanging(value);
                ReportPropertyChanging("ConferredEffectivenessMaximum");
                _ConferredEffectivenessMaximum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConferredEffectivenessMaximum");
                OnConferredEffectivenessMaximumChanged();
            }
        }
        private global::System.Decimal _ConferredEffectivenessMaximum;
        partial void OnConferredEffectivenessMaximumChanging(global::System.Decimal value);
        partial void OnConferredEffectivenessMaximumChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JanthusModel", Name="SkillType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SkillType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SkillType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SkillType CreateSkillType(global::System.Int32 id, global::System.String name)
        {
            SkillType skillType = new SkillType();
            skillType.Id = id;
            skillType.Name = name;
            return skillType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
    }

    #endregion
    
}
